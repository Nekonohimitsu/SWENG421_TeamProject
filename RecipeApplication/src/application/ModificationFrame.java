package application;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import utilities.Recipe;
import utilities.RecipeIF;
import utilities.RecipeIngredientIF;
import utilities.RecipeWrapper;
import utilities.Utility;

public class ModificationFrame extends javax.swing.JFrame {

    /**
     * Creates new form ModificationFrame
     */
    private RecipeIF recipeBeingModified;
    private final DefaultListModel storedModel;
    private static ModificationFrame instance = null;
    private final Client client;

    /**
     * Creates new form modFrame
     *
     * @param recipe
     */
    private ModificationFrame(RecipeIF recipe, Client c) {
        recipeBeingModified = recipe;
        client = c;
        initComponents();
        recipeName.setText(recipeBeingModified.getName());
        prepTime.setText(recipeBeingModified.getPrepTime());
        cookTime.setText(recipeBeingModified.getCookTime());
        storedModel = Utility.modifyList(ingList, recipeBeingModified.getIngredients());
        instructionTextArea.setText(recipeBeingModified.getDirections());
    }

    public static ModificationFrame getInstance(RecipeIF recipe, Client c) {
        if (instance == null) {
            instance = new ModificationFrame(recipe, c);
            instance.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            instance.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosing(WindowEvent e) {
                    instance = null;
                }
            });
        }
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        modificationPanel = new javax.swing.JPanel();
        ingLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        tipLabel = new javax.swing.JLabel();
        prepLabel = new javax.swing.JLabel();
        instrLabel = new javax.swing.JLabel();
        cookLabel = new javax.swing.JLabel();
        recipeName = new javax.swing.JTextField();
        prepTime = new javax.swing.JTextField();
        ingField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        instructionTextArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        addIngButton = new javax.swing.JButton();
        cookTime = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        ingList = new javax.swing.JList<>();
        cancelButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        ingLabel1 = new javax.swing.JLabel();
        qtyField = new javax.swing.JTextField();
        qtyTypeField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Recipe Modifier");
        setBackground(new java.awt.Color(137, 148, 139));

        modificationPanel.setBackground(new java.awt.Color(137, 148, 139));

        ingLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ingLabel.setText("Ingredients:");

        nameLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nameLabel.setText("Name:");

        tipLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tipLabel.setText("double-click to remove ingredient");

        prepLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        prepLabel.setText("Prep Time:");

        instrLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        instrLabel.setText("Instructions:");

        cookLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cookLabel.setText("Cook Time:");

        ingField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingFieldActionPerformed(evt);
            }
        });

        instructionTextArea.setColumns(20);
        instructionTextArea.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        instructionTextArea.setLineWrap(true);
        instructionTextArea.setRows(5);
        instructionTextArea.setWrapStyleWord(true);
        instructionTextArea.setAutoscrolls(false);
        instructionTextArea.setDragEnabled(true);
        instructionTextArea.setMinimumSize(new java.awt.Dimension(224, 84));
        jScrollPane1.setViewportView(instructionTextArea);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Recipe Modification");

        addIngButton.setText("+");
        addIngButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addIngButtonActionPerformed(evt);
            }
        });

        ingList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ingList);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        ingLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ingLabel1.setText("Qty:");

        qtyField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyFieldActionPerformed(evt);
            }
        });

        qtyTypeField.setText("oz");

        javax.swing.GroupLayout modificationPanelLayout = new javax.swing.GroupLayout(modificationPanel);
        modificationPanel.setLayout(modificationPanelLayout);
        modificationPanelLayout.setHorizontalGroup(
            modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modificationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(modificationPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(saveButton)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(modificationPanelLayout.createSequentialGroup()
                        .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(modificationPanelLayout.createSequentialGroup()
                                .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(instrLabel)
                                    .addGroup(modificationPanelLayout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ingLabel)
                                            .addComponent(prepLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(nameLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(25, 25, 25)
                                        .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(tipLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jScrollPane2)
                                            .addComponent(recipeName)
                                            .addGroup(modificationPanelLayout.createSequentialGroup()
                                                .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(modificationPanelLayout.createSequentialGroup()
                                                        .addComponent(prepTime, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(143, 143, 143)
                                                        .addComponent(cookLabel))
                                                    .addGroup(modificationPanelLayout.createSequentialGroup()
                                                        .addComponent(ingField, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(ingLabel1)))
                                                .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(modificationPanelLayout.createSequentialGroup()
                                                        .addGap(22, 22, 22)
                                                        .addComponent(qtyField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(qtyTypeField))
                                                    .addGroup(modificationPanelLayout.createSequentialGroup()
                                                        .addGap(22, 22, 22)
                                                        .addComponent(cookTime, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(modificationPanelLayout.createSequentialGroup()
                                                .addGap(165, 165, 165)
                                                .addComponent(jLabel1)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(addIngButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 82, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        modificationPanelLayout.setVerticalGroup(
            modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modificationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(recipeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prepLabel)
                    .addComponent(prepTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cookLabel)
                    .addComponent(cookTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(modificationPanelLayout.createSequentialGroup()
                        .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ingLabel)
                            .addComponent(ingField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ingLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modificationPanelLayout.createSequentialGroup()
                        .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(qtyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(qtyTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addIngButton))
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tipLabel)
                .addGap(2, 2, 2)
                .addComponent(instrLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(saveButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(modificationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(modificationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ingFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingFieldActionPerformed

    private void addIngButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addIngButtonActionPerformed
        // Add Ingredient Button 
        String ingredientName = ingField.getText();
        double amount;
        try {
             amount = Double.parseDouble(qtyField.getText());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Please enter a valid amount");
            return;
        }
        String amountType = qtyTypeField.getText();
        
        RecipeIngredientIF ri = Utility.createRecipeIngredient(ingredientName, amount, amountType);
        if (ri == null) {
            JOptionPane.showMessageDialog(null, "Ingredient doesn't exist in our database.");
        } else if (Utility.searchArrayForIngredientName(ri, recipeBeingModified.getIngredients()).size() > 0) {
            JOptionPane.showMessageDialog(null, "You already have that ingredient."
                    + " Please delete it and add the new value if you have more.");
        } else {
            recipeBeingModified = new RecipeWrapper(recipeBeingModified, ri);
            Utility.modifyList(ingList, recipeBeingModified.getIngredients());
            
        }
    }//GEN-LAST:event_addIngButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        //Save Button - we want to make sure they change the name of the recipe if they modify it.
        if (checkChanges()) {
            RecipeIF newRecipe = new Recipe(recipeName.getText(),
                    instructionTextArea.getText(), prepTime.getText(), cookTime.getText(), recipeBeingModified.getIngredients());
            if (client.storeRecipe(newRecipe)) {
                //Returns true if it can store to database. Otherwise, name already exists.
                this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
            } else {
                JOptionPane.showMessageDialog(null, "This recipe name already exists. Please choose another name.");
            }
        } else {
            if (recipeName.getText().equals(recipeBeingModified.getName())) {
                //Request user to modify the name because changes have been made.
                JOptionPane.showMessageDialog(null, "Please modify the name of the recipe.");
            } else {
                JOptionPane.showMessageDialog(null, "Please make sure you changed something.\n"
                        + "Note: Just changing the name is not allowed. ");
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void ingListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingListMouseClicked
        if (evt.getClickCount() > 1) { //Double clicked
            int index = ingList.getSelectedIndex();
            if (index != -1) {
                RecipeIngredientIF ri = recipeBeingModified.getIngredients().get(index);
                recipeBeingModified.removeIngredient(ri);
                Utility.modifyList(ingList, recipeBeingModified.getIngredients());
            }
        }
    }//GEN-LAST:event_ingListMouseClicked

    private void qtyFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyFieldActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_cancelButtonActionPerformed

    private boolean checkChanges() {
        return /* Make sure the name was changed */ !recipeName.getText().equals(recipeBeingModified.getName())
                && /* If the name was changed, make sure something else was too */ (!prepTime.getText().equals(recipeBeingModified.getPrepTime())
                || !cookTime.getText().equals(recipeBeingModified.getCookTime())
                || !instructionTextArea.getText().equals(recipeBeingModified.getDirections())
                || !storedModel.equals(ingList.getModel()));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addIngButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel cookLabel;
    private javax.swing.JTextField cookTime;
    private javax.swing.JTextField ingField;
    private javax.swing.JLabel ingLabel;
    private javax.swing.JLabel ingLabel1;
    private javax.swing.JList<String> ingList;
    private javax.swing.JLabel instrLabel;
    private javax.swing.JTextArea instructionTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel modificationPanel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel prepLabel;
    private javax.swing.JTextField prepTime;
    private javax.swing.JTextField qtyField;
    private javax.swing.JTextField qtyTypeField;
    private javax.swing.JTextField recipeName;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel tipLabel;
    // End of variables declaration//GEN-END:variables
}
