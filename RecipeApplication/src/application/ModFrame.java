package application;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import utilities.Recipe;
import utilities.RecipeIF;
import utilities.RecipeIngredientIF;
import utilities.Utility;

public class ModFrame extends javax.swing.JFrame {
    private final RecipeIF recipeBeingModified;
    private final ArrayList<RecipeIngredientIF> ingredients;
    private final DefaultListModel storedModel;
    private static ModFrame instance = null;
    private final Client client;
    /**
     * Creates new form modFrame
     * @param recipe
     */
    private ModFrame(RecipeIF recipe, Client c) {
        recipeBeingModified = recipe;
        client = c;
        initComponents();
        jTextField1.setText(recipeBeingModified.getName());
        jTextField2.setText(recipeBeingModified.getPrepTime());
        cookTime.setText(recipeBeingModified.getCookTime());
        ingredients = recipeBeingModified.getIngredients();
        storedModel = Utility.modifyList(jList1, ingredients);
        jTextArea1.setText(recipeBeingModified.getDirections());
    }
    
    public static ModFrame getInstance(RecipeIF recipe, Client c) {
        if (instance == null) {
            instance = new ModFrame(recipe, c);
            instance.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            instance.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                instance = null;
            }
        });
        } 
        return instance;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        modificationPanel = new javax.swing.JPanel();
        ingLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        tipLabel = new javax.swing.JLabel();
        prepLabel = new javax.swing.JLabel();
        instrLabel = new javax.swing.JLabel();
        cookLabel = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        cookTime = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Recipe Modifier");
        setBackground(new java.awt.Color(137, 148, 139));

        modificationPanel.setBackground(new java.awt.Color(137, 148, 139));

        ingLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ingLabel.setText("Ingredients:");

        nameLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nameLabel.setText("Name:");

        tipLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tipLabel.setText("double-click to remove ingredient");

        prepLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        prepLabel.setText("Prep Time:");

        instrLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        instrLabel.setText("Instructions:");

        cookLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cookLabel.setText("Cook Time:");

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Recipe Modification");

        jButton1.setText("+");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jList1);

        jButton2.setText("Cancel");

        jButton3.setText("Save");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout modificationPanelLayout = new javax.swing.GroupLayout(modificationPanel);
        modificationPanel.setLayout(modificationPanelLayout);
        modificationPanelLayout.setHorizontalGroup(
            modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modificationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(modificationPanelLayout.createSequentialGroup()
                        .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(instrLabel)
                            .addGroup(modificationPanelLayout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ingLabel)
                                    .addComponent(prepLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(nameLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(25, 25, 25)
                                .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(modificationPanelLayout.createSequentialGroup()
                                        .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(modificationPanelLayout.createSequentialGroup()
                                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(cookLabel)
                                                .addGap(25, 25, 25)
                                                .addComponent(cookTime, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jTextField4)
                                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane2)
                                    .addComponent(tipLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 126, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(modificationPanelLayout.createSequentialGroup()
                .addGap(359, 359, 359)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        modificationPanelLayout.setVerticalGroup(
            modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modificationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prepLabel)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cookLabel)
                    .addComponent(cookTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ingLabel)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(8, 8, 8)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tipLabel)
                .addGap(2, 2, 2)
                .addComponent(instrLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(modificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(modificationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(modificationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //Save Button - we want to make sure they change the name of the recipe if they modify it.
        if (checkChanges()) {
                RecipeIF newRecipe = new Recipe(jTextField1.getText(),
                    jTextArea1.getText(), jTextField2.getText(), cookTime.getText(), ingredients);
                if (client.storeRecipe(newRecipe)) {
                    //Returns true if it can store to database. Otherwise, name already exists.
                    this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
                } else {
                    JOptionPane.showMessageDialog(null, "This recipe name already exists. Please choose another name.");
                }
        } else {
            if (jTextField1.getText().equals(recipeBeingModified.getName())) {
                //Request user to modify the name because changes have been made.
                JOptionPane.showMessageDialog(null, "Please modify the name of the recipe.");
            } else {
                JOptionPane.showMessageDialog(null, "Please make sure you changed something.\n"
                        + "Note: Just changing the name is not allowed. ");
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private boolean checkChanges() {
        return 
            /* Make sure the name was changed */
            !jTextField1.getText().equals(recipeBeingModified.getName())
                &&
            /* If the name was changed, make sure something else was too */
            (!jTextField2.getText().equals(recipeBeingModified.getPrepTime())
                ||
            !cookTime.getText().equals(recipeBeingModified.getCookTime())
                ||
            !jTextArea1.getText().equals(recipeBeingModified.getDirections())
                ||
            !storedModel.equals(jList1.getModel()));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cookLabel;
    private javax.swing.JTextField cookTime;
    private javax.swing.JLabel ingLabel;
    private javax.swing.JLabel instrLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JPanel modificationPanel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel prepLabel;
    private javax.swing.JLabel tipLabel;
    // End of variables declaration//GEN-END:variables
}
